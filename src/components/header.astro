---
import { Icon } from "astro-icon/components";
import Avatar from "@/assets/avatar.svg";
import { Image } from "astro:assets";

interface SocialLink {
	name: string;
	url: string;
	icon?: string;
	target?: string;
}

const socialLinks: SocialLink[] = [
	{
		name: "CV",
		url: "/cv",
		icon: "journal-page",
		target: "_self",
	},
	{
		name: "Apps",
		url: "/apps",
		icon: "cube",
		target: "_self",
	},
	{
		name: "GitHub",
		url: "https://github.com/t128n",
	},
	{
		name: "Mail",
		url: "mailto:t128n@ipv4.8shield.net",
	},
	{
		name: "LinkedIn",
		url: "https://www.linkedin.com/in/torben-haack/",
	},
];

const externalLinks = ["http", "mailto"];
---

<header
    class="flex flex-row justify-between items-center"
    transition:name="header"
>
    <a href="/" class="flex items-center gap-2 hover:font-bold p-2">
        <Image
            loading="eager"
            src={Avatar}
            alt="Torben Haack"
            class="w-12 h-12 rounded-full"
        />
        <div class="flex flex-col">
            <h1>Torben Haack</h1>
            <span class="text-xs">[t128n]</span>
        </div>
    </a>
    <ul class="flex flex-row gap-4 items-center">
        {
            socialLinks.map((link) => (
                <li class="-m-2">
                    <a
                        href={link.url}
                        aria-label={link.name}
                        target={link.target ?? "_blank"}
                        rel="noopener noreferrer"
                        class="group block h-full w-full relative hover:bg-black/10 p-2"
                    >
                        <Icon
                            name={`iconoir:${link.icon ?? link.name.toLowerCase()}`}
                        />
                        <span class="items-center gap-1 group-hover:flex hidden absolute top-full left-1/2 -translate-x-1/2 mt-1 bg-white dark:bg-black border border-black/25 dark:border-white/25 rounded text-center py-1 px-2 text-xs whitespace-nowrap transition-opacity duration-500 delay-100">
                            {link.name}
                            {externalLinks.some((externalLink) =>
                                link.url.includes(externalLink),
                            ) && (
                                <Icon
                                    name="iconoir:arrow-up-right"
                                    class="inline-block"
                                />
                            )}
                        </span>
                    </a>
                </li>
            ))
        }
    </ul>
</header>
