---
import { Icon } from "astro-icon/components";

interface NavigationLink {
  label: string;
  href: string;
  external?: boolean;
  icon?: string;
}

const navigationLinks: NavigationLink[] = [
  { label: "About", href: "/about", icon: "user" },
  {
    label: "LinkedIn",
    href: "https://www.linkedin.com/in/torben-haack/",
    external: true,
    icon: "suitcase",
  },
  {
    label: "GitHub",
    href: "https://github.com/t128n",
    external: true,
    icon: "github",
  },
  {
    label: "Email",
    href: "mailto:t128n@ipv4.8shield.net",
    external: true,
    icon: "at",
  },
];
const isActive = (href: string) => {
  return (
    Astro.url.pathname === href || Astro.url.pathname.startsWith(`${href}/`)
  );
};
---

<header>
  <section>
    <a href="/" aria-label="Navigational link to Homepage" tabindex="0">
      <h1 aria-label="Legal Name">Torben Haack</h1>
      <span aria-label="Username">[t128n]</span>
    </a>
  </section>
  <nav aria-label="Main navigation">
    <ul>
      {
        navigationLinks.map((link) => (
          <li>
            <a
              href={link.href}
              {...(link.external
                ? { target: "_blank", rel: "noopener noreferrer" }
                : {})}
              tabindex="0"
              class:list={[
                "nav-link",
                { "nav-link--active": isActive(link.href) },
              ]}
              aria-label={`Navigational link to ${link.label}`}
            >
              <span class="nav-link-inner">
                {link.icon && (
                  <Icon
                    name={`pixelarticons:${link.icon}`}
                    width="1.5em"
                    height="1.5em"
                    aria-hidden="true"
                    style="display: block; margin: 0 auto;"
                  />
                )}
                <span class="nav-link-label">{link.label}</span>
              </span>
            </a>
          </li>
        ))
      }
    </ul>
  </nav>
</header>

<style>
  header {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
    font-family: var(--font-mono);
    padding: var(--space-md) 0;
    border-bottom: 1px solid var(--color-ui-2);
  }
  header section a {
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: var(--space-xs);
  }
  header section a h1 {
    font-weight: var(--font-semibold);
  }
  header section a span {
    font-size: var(--text-sm);
    color: var(--text-secondary);
  }

  header nav ul {
    display: flex;
    gap: var(--space-md);
    list-style: none;
    padding: 0;
    margin: 0;
    text-transform: lowercase;
  }

  header nav ul li a.nav-link {
    display: flex;
    align-items: center;
    font-size: var(--text-sm);
    text-decoration: none;
  }

  .nav-link-inner {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.15em;
  }

  .nav-link-label {
    font-size: 0.85em;
    margin-top: 0.1em;
    text-align: center;
    letter-spacing: 0.01em;
  }

  .nav-link--active {
    color: var(--color-primary);
    font-weight: var(--font-semibold);
  }

  @media (max-width: 40rem) {
    header {
      flex-direction: column;
      align-items: center;
      gap: var(--space-lg);
    }
    header nav {
      width: 100%;
    }
    header nav ul {
      justify-content: space-between;
    }
  }
</style>
