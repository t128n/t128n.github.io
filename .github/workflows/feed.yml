name: Manage Feed from Issues

on:
  issues:
    types: [opened, edited, labeled, unlabeled, closed, reopened]

env:
  FEED_LABEL: 'feed'
  FEED_DIR: 'content/feed'
  GITHUB_BOT_NAME: 'github-actions[bot]'
  GITHUB_BOT_EMAIL: '41898282+github-actions[bot]@users.noreply.github.com'
  GH_TOKEN: ${{ github.token }}

jobs:
  validate-and-process:
    if: |
      github.event.issue.user.login == github.repository_owner &&
      (
        (contains(github.event.issue.labels.*.name, 'feed') && 
         (github.event.action == 'opened' || 
          github.event.action == 'edited' || 
          github.event.action == 'reopened' ||
          (github.event.action == 'labeled' && github.event.label.name == 'feed'))) ||
        (github.event.action == 'unlabeled' && github.event.label.name == 'feed') ||
        (github.event.action == 'closed' && contains(github.event.issue.labels.*.name, 'feed'))
      )
    runs-on: ubuntu-latest
    timeout-minutes: 10
    permissions:
      issues: write
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Git configuration
        run: |
          git config user.name "${{ env.GITHUB_BOT_NAME }}"
          git config user.email "${{ env.GITHUB_BOT_EMAIL }}"

      - name: Process feed entry
        id: feed-process
        uses: ./.github/actions/feed-utils
        with:
          issue-body: ${{ github.event.issue.body }}
          issue-created-at: ${{ github.event.issue.created_at }}
          action: ${{ github.event.action }}
          feed-dir: ${{ env.FEED_DIR }}

      - name: Handle validation errors
        if: steps.feed-process.outputs.error != ''
        run: |
          gh issue comment "${{ github.event.issue.number }}" \
            --body "‚ùå **Validation Error**: ${{ steps.feed-process.outputs.error }}"
          exit 1

      - name: Commit and push changes
        if: steps.feed-process.outputs.operation != 'noop'
        run: |
          OPERATION="${{ steps.feed-process.outputs.operation }}"
          ISSUE_NUM="${{ github.event.issue.number }}"
          FILE_PATH="${{ steps.feed-process.outputs.file-path }}"
          
          if [ "$OPERATION" = "deleted" ]; then
            git rm "$FILE_PATH"
            COMMIT_MSG="chore(feed): delete feed entry for issue #$ISSUE_NUM"
          else
            git add "$FILE_PATH"
            COMMIT_MSG="chore(feed): $OPERATION feed entry for issue #$ISSUE_NUM"
          fi
          
          # Only commit if there are changes
          if ! git diff --staged --quiet; then
            git commit -m "$COMMIT_MSG"
            git push
          fi

      - name: Update issue with results
        run: |
          OPERATION="${{ steps.feed-process.outputs.operation }}"
          ISSUE_NUM="${{ github.event.issue.number }}"
          FILENAME="${{ steps.feed-process.outputs.filename }}"
          REPO="${{ github.repository }}"
          
          if [ "$OPERATION" = "noop" ]; then
            gh issue comment "$ISSUE_NUM" \
              --body "‚ö†Ô∏è **No action taken**: File not found, nothing to delete"
          else
            FILE_URL="https://github.com/$REPO/blob/main/${{ env.FEED_DIR }}/$FILENAME"
            
            if [ "$OPERATION" = "deleted" ]; then
              MESSAGE="üóëÔ∏è **Feed entry deleted**: $FILENAME"
            elif [ "$OPERATION" = "created" ]; then
              MESSAGE="‚úÖ **Feed entry created**: [$FILENAME]($FILE_URL)"
            else
              MESSAGE="üìù **Feed entry updated**: [$FILENAME]($FILE_URL)"
            fi
            
            gh issue comment "$ISSUE_NUM" --body "$MESSAGE"
          fi

      - name: Update issue title to feed URL
        if: steps.feed-process.outputs.operation != 'noop'
        run: |
          ISSUE_NUM="${{ github.event.issue.number }}"
          FILENAME="${{ steps.feed-process.outputs.filename }}"
          FEED_ID="${FILENAME%.md}"
          FEED_URL="https://t128n.github.io/feed/#$FEED_ID"
          NEW_TITLE="[Feed] $FEED_URL"
          gh issue edit "$ISSUE_NUM" --title "$NEW_TITLE"

      - name: Trigger rebuild
        if: steps.feed-process.outputs.operation != 'noop'
        run: |
          gh api repos/${{ github.repository }}/dispatches \
            -f event_type=rebuild_site

  close-unauthorized-issues:
    if: github.event.issue.user.login != github.repository_owner
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      issues: write
    steps:
      - name: Close unauthorized issue
        run: |
          gh issue close "${{ github.event.issue.number }}" \
            --comment "‚ùå **Access denied**: Feed entries can only be created by the repository owner. This issue has been closed automatically."
